// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AccountForm should not render error 1`] = `
<div
  onFocusCapture={[Function]}
  onKeyUp={[Function]}
>
  <AccountFields
    container={null}
    fields={
      Object {
        "passphrase": Object {
          "encrypted": true,
          "required": true,
          "type": "password",
        },
        "username": Object {
          "encrypted": false,
          "required": true,
          "role": "identifier",
          "type": "text",
        },
      }
    }
    hasError={false}
    initialValues={Object {}}
    inputRefByName={[Function]}
    t={
      [MockFunction] {
        "calls": Array [
          Array [
            "accountForm.submit.label",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": "accountForm.submit.label",
          },
        ],
      }
    }
  />
  <DefaultButton
    className="u-mt-2 u-mb-1-half"
    disabled={false}
    extension="full"
    label="accountForm.submit.label"
    onClick={[Function]}
  />
</div>
`;

exports[`AccountForm should render 1`] = `
<div
  onFocusCapture={[Function]}
  onKeyUp={[Function]}
>
  <AccountFields
    container={null}
    fields={
      Object {
        "passphrase": Object {
          "encrypted": true,
          "required": true,
          "type": "password",
        },
        "username": Object {
          "encrypted": false,
          "required": true,
          "role": "identifier",
          "type": "text",
        },
      }
    }
    initialValues={Object {}}
    inputRefByName={[Function]}
    t={
      [MockFunction] {
        "calls": Array [
          Array [
            "accountForm.submit.label",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": "accountForm.submit.label",
          },
        ],
      }
    }
  />
  <DefaultButton
    className="u-mt-2 u-mb-1-half"
    disabled={true}
    extension="full"
    label="accountForm.submit.label"
    onClick={[Function]}
  />
</div>
`;

exports[`AccountForm should render error 1`] = `
<div
  onFocusCapture={[Function]}
  onKeyUp={[Function]}
>
  <Wrapper
    className="u-mb-1"
    error={[Error: Test error]}
    konnector={
      Object {
        "fields": Object {
          "passphrase": Object {
            "type": "password",
          },
          "username": Object {
            "type": "text",
          },
        },
      }
    }
  />
  <AccountFields
    container={null}
    fields={
      Object {
        "passphrase": Object {
          "encrypted": true,
          "required": true,
          "type": "password",
        },
        "username": Object {
          "encrypted": false,
          "required": true,
          "role": "identifier",
          "type": "text",
        },
      }
    }
    hasError={false}
    initialValues={Object {}}
    inputRefByName={[Function]}
    t={
      [MockFunction] {
        "calls": Array [
          Array [
            "accountForm.submit.label",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": "accountForm.submit.label",
          },
        ],
      }
    }
  />
  <DefaultButton
    className="u-mt-2 u-mb-1-half"
    disabled={false}
    extension="full"
    label="accountForm.submit.label"
    onClick={[Function]}
  />
</div>
`;
