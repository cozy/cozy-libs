// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AccountField render a date field 1`] = `
<Field
  aria-label="fields.date.label"
  autoComplete="off"
  className="u-m-0"
  error={false}
  fieldProps={Object {}}
  fullwidth={true}
  id="harvest-account-date"
  inputRef={[Function]}
  label={
    <ObfuscatedLabel
      label="fields.date.label"
    />
  }
  labelProps={Object {}}
  name="date"
  placeholder="fields.date.placeholder"
  required={true}
  secondaryLabels={Object {}}
  side={null}
  size="medium"
  t={
    [MockFunction] {
      "calls": Array [
        Array [
          "legacy.fields.date.label",
          Object {
            "_": "date",
          },
        ],
        Array [
          "fields.date.label",
          Object {
            "_": "legacy.fields.date.label",
          },
        ],
        Array [
          "fields.date.placeholder",
          Object {
            "_": "",
          },
        ],
        Array [
          "accountForm.password.hide",
        ],
        Array [
          "accountForm.password.show",
        ],
        Array [
          "default.dateFormat",
        ],
        Array [
          "fields.date.placeholder",
          Object {
            "_": "default.dateformat",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": "legacy.fields.date.label",
        },
        Object {
          "type": "return",
          "value": "fields.date.label",
        },
        Object {
          "type": "return",
          "value": "fields.date.placeholder",
        },
        Object {
          "type": "return",
          "value": "accountForm.password.hide",
        },
        Object {
          "type": "return",
          "value": "accountForm.password.show",
        },
        Object {
          "type": "return",
          "value": "default.dateFormat",
        },
        Object {
          "type": "return",
          "value": "fields.date.placeholder",
        },
      ],
    }
  }
  type="date"
/>
`;

exports[`AccountField render a dropdown field 1`] = `
<Field
  aria-label="fields.multiple.label"
  className="u-m-0"
  error={false}
  fieldProps={Object {}}
  fullwidth={true}
  id="harvest-account-multiple"
  inputRef={[Function]}
  label={
    <ObfuscatedLabel
      label="fields.multiple.label"
    />
  }
  labelProps={Object {}}
  name="multiple"
  options={
    Array [
      Object {
        "label": "Option 1",
        "value": "option1",
      },
      Object {
        "label": "Option 2",
        "value": "option2",
      },
    ]
  }
  placeholder="fields.multiple.placeholder"
  required={true}
  secondaryLabels={Object {}}
  side={null}
  size="medium"
  t={
    [MockFunction] {
      "calls": Array [
        Array [
          "legacy.fields.multiple.label",
          Object {
            "_": "multiple",
          },
        ],
        Array [
          "fields.multiple.label",
          Object {
            "_": "legacy.fields.multiple.label",
          },
        ],
        Array [
          "fields.multiple.placeholder",
          Object {
            "_": "",
          },
        ],
        Array [
          "accountForm.password.hide",
        ],
        Array [
          "accountForm.password.show",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": "legacy.fields.multiple.label",
        },
        Object {
          "type": "return",
          "value": "fields.multiple.label",
        },
        Object {
          "type": "return",
          "value": "fields.multiple.placeholder",
        },
        Object {
          "type": "return",
          "value": "accountForm.password.hide",
        },
        Object {
          "type": "return",
          "value": "accountForm.password.show",
        },
      ],
    }
  }
  type="select"
/>
`;

exports[`AccountField render a password field 1`] = `
<PasswordField
  aria-label="fields.passphrase.label"
  autoComplete="off"
  className="u-m-0"
  encrypted={true}
  fullwidth={true}
  id="harvest-account-passphrase"
  inputRef={[Function]}
  label={
    <ObfuscatedLabel
      label="fields.passphrase.label"
    />
  }
  name="passphrase"
  placeholder="fields.passphrase.placeholder"
  required={true}
  secondaryLabels={
    Object {
      "hideLabel": "accountForm.password.hide",
      "showLabel": "accountForm.password.show",
    }
  }
  side={null}
  size="medium"
  t={
    [MockFunction] {
      "calls": Array [
        Array [
          "legacy.fields.passphrase.label",
          Object {
            "_": "passphrase",
          },
        ],
        Array [
          "fields.passphrase.label",
          Object {
            "_": "legacy.fields.passphrase.label",
          },
        ],
        Array [
          "fields.passphrase.placeholder",
          Object {
            "_": "",
          },
        ],
        Array [
          "accountForm.password.hide",
        ],
        Array [
          "accountForm.password.show",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": "legacy.fields.passphrase.label",
        },
        Object {
          "type": "return",
          "value": "fields.passphrase.label",
        },
        Object {
          "type": "return",
          "value": "fields.passphrase.placeholder",
        },
        Object {
          "type": "return",
          "value": "accountForm.password.hide",
        },
        Object {
          "type": "return",
          "value": "accountForm.password.show",
        },
      ],
    }
  }
  type="password"
/>
`;

exports[`AccountField should render 1`] = `
<Field
  aria-label="fields.username.label"
  autoComplete="off"
  className="u-m-0"
  encrypted={false}
  error={false}
  fieldProps={Object {}}
  fullwidth={true}
  id="harvest-account-username"
  inputRef={[Function]}
  label={
    <ObfuscatedLabel
      label="fields.username.label"
    />
  }
  labelProps={Object {}}
  name="username"
  placeholder="fields.username.placeholder"
  required={true}
  secondaryLabels={Object {}}
  side={null}
  size="medium"
  t={
    [MockFunction] {
      "calls": Array [
        Array [
          "legacy.fields.username.label",
          Object {
            "_": "username",
          },
        ],
        Array [
          "fields.username.label",
          Object {
            "_": "legacy.fields.username.label",
          },
        ],
        Array [
          "fields.username.placeholder",
          Object {
            "_": "",
          },
        ],
        Array [
          "accountForm.password.hide",
        ],
        Array [
          "accountForm.password.show",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": "legacy.fields.username.label",
        },
        Object {
          "type": "return",
          "value": "fields.username.label",
        },
        Object {
          "type": "return",
          "value": "fields.username.placeholder",
        },
        Object {
          "type": "return",
          "value": "accountForm.password.hide",
        },
        Object {
          "type": "return",
          "value": "accountForm.password.show",
        },
      ],
    }
  }
  type="text"
/>
`;
