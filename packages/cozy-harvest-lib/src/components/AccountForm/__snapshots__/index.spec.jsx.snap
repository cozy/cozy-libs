// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AccountForm should not render error 1`] = `
<div
  onFocusCapture={[Function]}
  onKeyUp={[Function]}
>
  <React.Fragment>
    <AccountFields
      fields={
        Object {
          "passphrase": Object {
            "encrypted": true,
            "required": true,
            "type": "password",
          },
          "username": Object {
            "encrypted": false,
            "required": true,
            "role": "identifier",
            "type": "text",
          },
        }
      }
      hasError={false}
      initialValues={Object {}}
      inputRefByName={[Function]}
      t={[Function]}
    />
    <ForwardRef
      className="u-mt-2 u-mb-1-half"
      data-testid="submit-btn"
      disabled={false}
      fullWidth={true}
      label="Connect"
      onClick={[Function]}
      variant="primary"
    />
  </React.Fragment>
</div>
`;

exports[`AccountForm should render 1`] = `
<div
  onFocusCapture={[Function]}
  onKeyUp={[Function]}
>
  <React.Fragment>
    <AccountFields
      fields={
        Object {
          "passphrase": Object {
            "encrypted": true,
            "required": true,
            "type": "password",
          },
          "username": Object {
            "encrypted": false,
            "required": true,
            "role": "identifier",
            "type": "text",
          },
        }
      }
      initialValues={Object {}}
      inputRefByName={[Function]}
      t={[Function]}
    />
    <ForwardRef
      className="u-mt-2 u-mb-1-half"
      data-testid="submit-btn"
      disabled={true}
      fullWidth={true}
      label="Connect"
      onClick={[Function]}
      variant="primary"
    />
  </React.Fragment>
</div>
`;

exports[`AccountForm should render error 1`] = `
<div
  onFocusCapture={[Function]}
  onKeyUp={[Function]}
>
  <withI18n(withClient(withKonnectorLocales(TriggerErrorInfo))
    className="u-mb-1"
    error={[Error: Test error]}
    konnector={
      Object {
        "fields": Object {
          "passphrase": Object {
            "type": "password",
          },
          "username": Object {
            "type": "text",
          },
        },
      }
    }
  />
  <React.Fragment>
    <AccountFields
      fields={
        Object {
          "passphrase": Object {
            "encrypted": true,
            "required": true,
            "type": "password",
          },
          "username": Object {
            "encrypted": false,
            "required": true,
            "role": "identifier",
            "type": "text",
          },
        }
      }
      hasError={false}
      initialValues={Object {}}
      inputRefByName={[Function]}
      t={[Function]}
    />
    <ForwardRef
      className="u-mt-2 u-mb-1-half"
      data-testid="submit-btn"
      disabled={false}
      fullWidth={true}
      label="Connect"
      onClick={[Function]}
      variant="primary"
    />
  </React.Fragment>
</div>
`;

exports[`AccountForm should render normally when client side konnector with launcher 1`] = `
<div
  onFocusCapture={[Function]}
  onKeyUp={[Function]}
>
  <React.Fragment>
    <AccountFields
      fields={Object {}}
      initialValues={Object {}}
      inputRefByName={[Function]}
      t={[Function]}
    />
    <ForwardRef
      className="u-mt-2 u-mb-1-half"
      data-testid="submit-btn"
      disabled={false}
      fullWidth={true}
      label="Connect"
      onClick={[Function]}
      variant="primary"
    />
  </React.Fragment>
</div>
`;

exports[`AccountForm should render with specific message when client side konnector without launcher 1`] = `
<div
  onFocusCapture={[Function]}
  onKeyUp={[Function]}
>
  <React.Fragment>
    <Media
      align="top"
    >
      <Img
        className="u-m-1"
      >
        <Icon
          icon={[Function]}
          spin={false}
        />
      </Img>
      <Bd
        className="u-m-1"
      >
        <ForwardRef>
          The testkonnector application uses a brand-new and efficient system for retrieving your data from your Cozy. This action is only accessible from the Cozy mobile app.
        </ForwardRef>
      </Bd>
    </Media>
    <ForwardRef
      className="u-mt-2 u-mb-1-half"
      fullWidth={true}
      label="Install Cozy on mobile"
      onClick={[Function]}
      variant="primary"
    />
  </React.Fragment>
</div>
`;
