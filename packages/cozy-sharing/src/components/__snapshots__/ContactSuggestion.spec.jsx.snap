// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContactSuggestion component should display contact suggestion for a contact 1`] = `
<ContactSuggestion
  contactOrGroup={
    Object {
      "_id": "f3a4e501-abbd",
      "_type": "io.cozy.contacts",
      "cozy": Array [
        Object {
          "primary": true,
          "url": "https://jonsnow.mycozy.cloud",
        },
      ],
      "email": Array [
        Object {
          "address": "jon.snow@email.com",
          "type": "primary",
        },
      ],
      "fullname": "Jon Snow",
      "name": Object {
        "familyName": "Snow",
        "givenName": "Jon",
      },
    }
  }
  contacts={
    Array [
      Object {
        "_id": "f3a4e501-abbd",
        "_type": "io.cozy.contacts",
        "cozy": Array [
          Object {
            "primary": true,
            "url": "https://jonsnow.mycozy.cloud",
          },
        ],
        "email": Array [
          Object {
            "address": "jon.snow@email.com",
            "type": "primary",
          },
        ],
        "fullname": "Jon Snow",
        "name": Object {
          "familyName": "Snow",
          "givenName": "Jon",
        },
      },
    ]
  }
  t={[MockFunction]}
>
  <WithStyles(ForwardRef(ListItem))
    button={true}
  >
    <ForwardRef(ListItem)
      button={true}
      classes={
        Object {
          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
          "button": "MuiListItem-button",
          "container": "MuiListItem-container",
          "dense": "MuiListItem-dense",
          "disabled": "Mui-disabled",
          "divider": "MuiListItem-divider",
          "focusVisible": "Mui-focusVisible",
          "gutters": "MuiListItem-gutters",
          "root": "MuiListItem-root",
          "secondaryAction": "MuiListItem-secondaryAction",
          "selected": "Mui-selected",
        }
      }
    >
      <WithStyles(ForwardRef(ButtonBase))
        className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
        component="div"
        disabled={false}
        focusVisibleClassName="Mui-focusVisible"
      >
        <ForwardRef(ButtonBase)
          className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
          classes={
            Object {
              "disabled": "Mui-disabled",
              "focusVisible": "Mui-focusVisible",
              "root": "MuiButtonBase-root",
            }
          }
          component="div"
          disabled={false}
          focusVisibleClassName="Mui-focusVisible"
        >
          <div
            aria-disabled={false}
            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
            onBlur={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            role="button"
            tabIndex={0}
          >
            <WithStyles(ForwardRef(ListItemIcon))
              key=".0"
            >
              <ForwardRef(ListItemIcon)
                classes={
                  Object {
                    "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                    "root": "MuiListItemIcon-root",
                  }
                }
              >
                <div
                  className="MuiListItemIcon-root"
                >
                  <Avatar
                    className=""
                    disabled={false}
                    ghost={false}
                    icon={[Function]}
                    image=""
                    size="small"
                    style={Object {}}
                    text="JS"
                  >
                    <div
                      className="styles__c-avatar___PpDI- styles__c-avatar--text___2dvna"
                      data-testid="Avatar"
                      style={
                        Object {
                          "--circleSize": "32px",
                          "backgroundColor": "#C2ADF4",
                        }
                      }
                    >
                      <span
                        className="styles__c-avatar-initials___310qC"
                      >
                        JS
                      </span>
                    </div>
                  </Avatar>
                </div>
              </ForwardRef(ListItemIcon)>
            </WithStyles(ForwardRef(ListItemIcon))>
            <ListItemText
              ellipsis={true}
              key=".1"
              primary="Jon Snow"
              secondary="https://jonsnow.mycozy.cloud"
            >
              <WithStyles(ForwardRef(ListItemText))
                primary="Jon Snow"
                primaryTypographyProps={
                  Object {
                    "classes": Object {
                      "root": "u-db u-ellipsis",
                    },
                  }
                }
                secondary="https://jonsnow.mycozy.cloud"
                secondaryTypographyProps={
                  Object {
                    "classes": Object {
                      "root": "u-db u-ellipsis",
                    },
                    "variant": "caption",
                  }
                }
              >
                <ForwardRef(ListItemText)
                  classes={
                    Object {
                      "dense": "MuiListItemText-dense",
                      "inset": "MuiListItemText-inset",
                      "multiline": "MuiListItemText-multiline",
                      "primary": "MuiListItemText-primary",
                      "root": "MuiListItemText-root",
                      "secondary": "MuiListItemText-secondary",
                    }
                  }
                  primary="Jon Snow"
                  primaryTypographyProps={
                    Object {
                      "classes": Object {
                        "root": "u-db u-ellipsis",
                      },
                    }
                  }
                  secondary="https://jonsnow.mycozy.cloud"
                  secondaryTypographyProps={
                    Object {
                      "classes": Object {
                        "root": "u-db u-ellipsis",
                      },
                      "variant": "caption",
                    }
                  }
                >
                  <div
                    className="MuiListItemText-root MuiListItemText-multiline"
                  >
                    <WithStyles(ForwardRef(Typography))
                      className="MuiListItemText-primary"
                      classes={
                        Object {
                          "root": "u-db u-ellipsis",
                        }
                      }
                      component="span"
                      display="block"
                      variant="body1"
                    >
                      <ForwardRef(Typography)
                        className="MuiListItemText-primary"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root u-db u-ellipsis",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        component="span"
                        display="block"
                        variant="body1"
                      >
                        <span
                          className="MuiTypography-root u-db u-ellipsis MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                        >
                          Jon Snow
                        </span>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                    <WithStyles(ForwardRef(Typography))
                      className="MuiListItemText-secondary"
                      classes={
                        Object {
                          "root": "u-db u-ellipsis",
                        }
                      }
                      color="textSecondary"
                      display="block"
                      variant="caption"
                    >
                      <ForwardRef(Typography)
                        className="MuiListItemText-secondary"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root u-db u-ellipsis",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        color="textSecondary"
                        display="block"
                        variant="caption"
                      >
                        <span
                          className="MuiTypography-root u-db u-ellipsis MuiListItemText-secondary MuiTypography-caption MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                        >
                          https://jonsnow.mycozy.cloud
                        </span>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </div>
                </ForwardRef(ListItemText)>
              </WithStyles(ForwardRef(ListItemText))>
            </ListItemText>
            <WithStyles(memo)
              center={false}
            >
              <ForwardRef(TouchRipple)
                center={false}
                classes={
                  Object {
                    "child": "MuiTouchRipple-child",
                    "childLeaving": "MuiTouchRipple-childLeaving",
                    "childPulsate": "MuiTouchRipple-childPulsate",
                    "ripple": "MuiTouchRipple-ripple",
                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                    "root": "MuiTouchRipple-root",
                  }
                }
              >
                <span
                  className="MuiTouchRipple-root"
                >
                  <TransitionGroup
                    childFactory={[Function]}
                    component={null}
                    exit={true}
                  />
                </span>
              </ForwardRef(TouchRipple)>
            </WithStyles(memo)>
          </div>
        </ForwardRef(ButtonBase)>
      </WithStyles(ForwardRef(ButtonBase))>
    </ForwardRef(ListItem)>
  </WithStyles(ForwardRef(ListItem))>
</ContactSuggestion>
`;

exports[`ContactSuggestion component should display contact suggestion for a contact without fullname (for example created by a share modal) 1`] = `
<ContactSuggestion
  contactOrGroup={
    Object {
      "_id": "f3a4e501-abbd",
      "_type": "io.cozy.contacts",
      "cozy": Array [],
      "email": Array [
        Object {
          "address": "jon.snow@email.com",
          "type": "primary",
        },
      ],
      "name": undefined,
    }
  }
  contacts={
    Array [
      Object {
        "_id": "f3a4e501-abbd",
        "_type": "io.cozy.contacts",
        "cozy": Array [],
        "email": Array [
          Object {
            "address": "jon.snow@email.com",
            "type": "primary",
          },
        ],
        "name": undefined,
      },
    ]
  }
  t={[MockFunction]}
>
  <WithStyles(ForwardRef(ListItem))
    button={true}
  >
    <ForwardRef(ListItem)
      button={true}
      classes={
        Object {
          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
          "button": "MuiListItem-button",
          "container": "MuiListItem-container",
          "dense": "MuiListItem-dense",
          "disabled": "Mui-disabled",
          "divider": "MuiListItem-divider",
          "focusVisible": "Mui-focusVisible",
          "gutters": "MuiListItem-gutters",
          "root": "MuiListItem-root",
          "secondaryAction": "MuiListItem-secondaryAction",
          "selected": "Mui-selected",
        }
      }
    >
      <WithStyles(ForwardRef(ButtonBase))
        className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
        component="div"
        disabled={false}
        focusVisibleClassName="Mui-focusVisible"
      >
        <ForwardRef(ButtonBase)
          className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
          classes={
            Object {
              "disabled": "Mui-disabled",
              "focusVisible": "Mui-focusVisible",
              "root": "MuiButtonBase-root",
            }
          }
          component="div"
          disabled={false}
          focusVisibleClassName="Mui-focusVisible"
        >
          <div
            aria-disabled={false}
            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
            onBlur={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            role="button"
            tabIndex={0}
          >
            <WithStyles(ForwardRef(ListItemIcon))
              key=".0"
            >
              <ForwardRef(ListItemIcon)
                classes={
                  Object {
                    "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                    "root": "MuiListItemIcon-root",
                  }
                }
              >
                <div
                  className="MuiListItemIcon-root"
                >
                  <Avatar
                    className=""
                    disabled={false}
                    ghost={false}
                    icon={[Function]}
                    image=""
                    size="small"
                    style={Object {}}
                    text="J"
                  >
                    <div
                      className="styles__c-avatar___PpDI- styles__c-avatar--text___2dvna"
                      data-testid="Avatar"
                      style={
                        Object {
                          "--circleSize": "32px",
                          "backgroundColor": "#0DCBCF",
                        }
                      }
                    >
                      <span
                        className="styles__c-avatar-initials___310qC"
                      >
                        J
                      </span>
                    </div>
                  </Avatar>
                </div>
              </ForwardRef(ListItemIcon)>
            </WithStyles(ForwardRef(ListItemIcon))>
            <ListItemText
              ellipsis={true}
              key=".1"
              primary="jon.snow@email.com"
              secondary="-"
            >
              <WithStyles(ForwardRef(ListItemText))
                primary="jon.snow@email.com"
                primaryTypographyProps={
                  Object {
                    "classes": Object {
                      "root": "u-db u-ellipsis",
                    },
                  }
                }
                secondary="-"
                secondaryTypographyProps={
                  Object {
                    "classes": Object {
                      "root": "u-db u-ellipsis",
                    },
                    "variant": "caption",
                  }
                }
              >
                <ForwardRef(ListItemText)
                  classes={
                    Object {
                      "dense": "MuiListItemText-dense",
                      "inset": "MuiListItemText-inset",
                      "multiline": "MuiListItemText-multiline",
                      "primary": "MuiListItemText-primary",
                      "root": "MuiListItemText-root",
                      "secondary": "MuiListItemText-secondary",
                    }
                  }
                  primary="jon.snow@email.com"
                  primaryTypographyProps={
                    Object {
                      "classes": Object {
                        "root": "u-db u-ellipsis",
                      },
                    }
                  }
                  secondary="-"
                  secondaryTypographyProps={
                    Object {
                      "classes": Object {
                        "root": "u-db u-ellipsis",
                      },
                      "variant": "caption",
                    }
                  }
                >
                  <div
                    className="MuiListItemText-root MuiListItemText-multiline"
                  >
                    <WithStyles(ForwardRef(Typography))
                      className="MuiListItemText-primary"
                      classes={
                        Object {
                          "root": "u-db u-ellipsis",
                        }
                      }
                      component="span"
                      display="block"
                      variant="body1"
                    >
                      <ForwardRef(Typography)
                        className="MuiListItemText-primary"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root u-db u-ellipsis",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        component="span"
                        display="block"
                        variant="body1"
                      >
                        <span
                          className="MuiTypography-root u-db u-ellipsis MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                        >
                          jon.snow@email.com
                        </span>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                    <WithStyles(ForwardRef(Typography))
                      className="MuiListItemText-secondary"
                      classes={
                        Object {
                          "root": "u-db u-ellipsis",
                        }
                      }
                      color="textSecondary"
                      display="block"
                      variant="caption"
                    >
                      <ForwardRef(Typography)
                        className="MuiListItemText-secondary"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root u-db u-ellipsis",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        color="textSecondary"
                        display="block"
                        variant="caption"
                      >
                        <span
                          className="MuiTypography-root u-db u-ellipsis MuiListItemText-secondary MuiTypography-caption MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                        >
                          -
                        </span>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </div>
                </ForwardRef(ListItemText)>
              </WithStyles(ForwardRef(ListItemText))>
            </ListItemText>
            <WithStyles(memo)
              center={false}
            >
              <ForwardRef(TouchRipple)
                center={false}
                classes={
                  Object {
                    "child": "MuiTouchRipple-child",
                    "childLeaving": "MuiTouchRipple-childLeaving",
                    "childPulsate": "MuiTouchRipple-childPulsate",
                    "ripple": "MuiTouchRipple-ripple",
                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                    "root": "MuiTouchRipple-root",
                  }
                }
              >
                <span
                  className="MuiTouchRipple-root"
                >
                  <TransitionGroup
                    childFactory={[Function]}
                    component={null}
                    exit={true}
                  />
                </span>
              </ForwardRef(TouchRipple)>
            </WithStyles(memo)>
          </div>
        </ForwardRef(ButtonBase)>
      </WithStyles(ForwardRef(ButtonBase))>
    </ForwardRef(ListItem)>
  </WithStyles(ForwardRef(ListItem))>
</ContactSuggestion>
`;

exports[`ContactSuggestion component should display contact suggestion for a group 1`] = `
<ContactSuggestion
  contactOrGroup={
    Object {
      "_id": "610718e6-2d7a",
      "_type": "io.cozy.contacts.groups",
      "name": "The Night's Watch",
    }
  }
  contacts={
    Array [
      Object {
        "_id": "f3a4e501-abbd",
        "_type": "io.cozy.contacts",
        "email": Array [
          Object {
            "address": "jon.snow@email.com",
            "type": "primary",
          },
        ],
        "fullname": "Jon Snow",
        "name": Object {
          "familyName": "Snow",
          "givenName": "Jon",
        },
        "relationships": Object {
          "groups": Object {
            "data": Array [
              Object {
                "_id": "610718e6-2d7a",
                "_type": "io.cozy.contacts.groups",
              },
            ],
          },
        },
      },
      Object {
        "_id": "42dc490a-7878",
        "_type": "io.cozy.contacts",
        "email": Array [
          Object {
            "address": "cersei@email.com",
            "type": "primary",
          },
        ],
        "fullname": "Cersei Lannister",
        "name": Object {
          "familyName": "Lannister",
          "givenName": "Cersei",
        },
        "relationships": Object {
          "groups": Object {
            "data": Array [],
          },
        },
      },
      Object {
        "_id": "b5bed853-93da",
        "_type": "io.cozy.contacts",
        "email": Array [
          Object {
            "address": "samwell@email.com",
            "type": "primary",
          },
        ],
        "fullname": "Samwell Tarly",
        "name": Object {
          "familyName": "Tarly",
          "givenName": "Samwell",
        },
        "relationships": Object {
          "groups": Object {
            "data": Array [
              Object {
                "_id": "610718e6-2d7a",
                "_type": "io.cozy.contacts.groups",
              },
            ],
          },
        },
      },
    ]
  }
  t={[MockFunction]}
>
  <WithStyles(ForwardRef(ListItem))
    button={true}
  >
    <ForwardRef(ListItem)
      button={true}
      classes={
        Object {
          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
          "button": "MuiListItem-button",
          "container": "MuiListItem-container",
          "dense": "MuiListItem-dense",
          "disabled": "Mui-disabled",
          "divider": "MuiListItem-divider",
          "focusVisible": "Mui-focusVisible",
          "gutters": "MuiListItem-gutters",
          "root": "MuiListItem-root",
          "secondaryAction": "MuiListItem-secondaryAction",
          "selected": "Mui-selected",
        }
      }
    >
      <WithStyles(ForwardRef(ButtonBase))
        className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
        component="div"
        disabled={false}
        focusVisibleClassName="Mui-focusVisible"
      >
        <ForwardRef(ButtonBase)
          className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
          classes={
            Object {
              "disabled": "Mui-disabled",
              "focusVisible": "Mui-focusVisible",
              "root": "MuiButtonBase-root",
            }
          }
          component="div"
          disabled={false}
          focusVisibleClassName="Mui-focusVisible"
        >
          <div
            aria-disabled={false}
            className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
            onBlur={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            role="button"
            tabIndex={0}
          >
            <WithStyles(ForwardRef(ListItemIcon))
              key=".0"
            >
              <ForwardRef(ListItemIcon)
                classes={
                  Object {
                    "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                    "root": "MuiListItemIcon-root",
                  }
                }
              >
                <div
                  className="MuiListItemIcon-root"
                >
                  <Avatar
                    className=""
                    disabled={false}
                    ghost={false}
                    icon={[Function]}
                    image=""
                    size="small"
                    style={Object {}}
                    text="G"
                  >
                    <div
                      className="styles__c-avatar___PpDI- styles__c-avatar--text___2dvna"
                      data-testid="Avatar"
                      style={
                        Object {
                          "--circleSize": "32px",
                          "backgroundColor": "#7F6BEE",
                        }
                      }
                    >
                      <span
                        className="styles__c-avatar-initials___310qC"
                      >
                        G
                      </span>
                    </div>
                  </Avatar>
                </div>
              </ForwardRef(ListItemIcon)>
            </WithStyles(ForwardRef(ListItemIcon))>
            <ListItemText
              ellipsis={true}
              key=".1"
              primary="The Night's Watch"
              secondary="2 members"
            >
              <WithStyles(ForwardRef(ListItemText))
                primary="The Night's Watch"
                primaryTypographyProps={
                  Object {
                    "classes": Object {
                      "root": "u-db u-ellipsis",
                    },
                  }
                }
                secondary="2 members"
                secondaryTypographyProps={
                  Object {
                    "classes": Object {
                      "root": "u-db u-ellipsis",
                    },
                    "variant": "caption",
                  }
                }
              >
                <ForwardRef(ListItemText)
                  classes={
                    Object {
                      "dense": "MuiListItemText-dense",
                      "inset": "MuiListItemText-inset",
                      "multiline": "MuiListItemText-multiline",
                      "primary": "MuiListItemText-primary",
                      "root": "MuiListItemText-root",
                      "secondary": "MuiListItemText-secondary",
                    }
                  }
                  primary="The Night's Watch"
                  primaryTypographyProps={
                    Object {
                      "classes": Object {
                        "root": "u-db u-ellipsis",
                      },
                    }
                  }
                  secondary="2 members"
                  secondaryTypographyProps={
                    Object {
                      "classes": Object {
                        "root": "u-db u-ellipsis",
                      },
                      "variant": "caption",
                    }
                  }
                >
                  <div
                    className="MuiListItemText-root MuiListItemText-multiline"
                  >
                    <WithStyles(ForwardRef(Typography))
                      className="MuiListItemText-primary"
                      classes={
                        Object {
                          "root": "u-db u-ellipsis",
                        }
                      }
                      component="span"
                      display="block"
                      variant="body1"
                    >
                      <ForwardRef(Typography)
                        className="MuiListItemText-primary"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root u-db u-ellipsis",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        component="span"
                        display="block"
                        variant="body1"
                      >
                        <span
                          className="MuiTypography-root u-db u-ellipsis MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                        >
                          The Night's Watch
                        </span>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                    <WithStyles(ForwardRef(Typography))
                      className="MuiListItemText-secondary"
                      classes={
                        Object {
                          "root": "u-db u-ellipsis",
                        }
                      }
                      color="textSecondary"
                      display="block"
                      variant="caption"
                    >
                      <ForwardRef(Typography)
                        className="MuiListItemText-secondary"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root u-db u-ellipsis",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        color="textSecondary"
                        display="block"
                        variant="caption"
                      >
                        <span
                          className="MuiTypography-root u-db u-ellipsis MuiListItemText-secondary MuiTypography-caption MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                        >
                          2 members
                        </span>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </div>
                </ForwardRef(ListItemText)>
              </WithStyles(ForwardRef(ListItemText))>
            </ListItemText>
            <WithStyles(memo)
              center={false}
            >
              <ForwardRef(TouchRipple)
                center={false}
                classes={
                  Object {
                    "child": "MuiTouchRipple-child",
                    "childLeaving": "MuiTouchRipple-childLeaving",
                    "childPulsate": "MuiTouchRipple-childPulsate",
                    "ripple": "MuiTouchRipple-ripple",
                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                    "root": "MuiTouchRipple-root",
                  }
                }
              >
                <span
                  className="MuiTouchRipple-root"
                >
                  <TransitionGroup
                    childFactory={[Function]}
                    component={null}
                    exit={true}
                  />
                </span>
              </ForwardRef(TouchRipple)>
            </WithStyles(memo)>
          </div>
        </ForwardRef(ButtonBase)>
      </WithStyles(ForwardRef(ButtonBase))>
    </ForwardRef(ListItem)>
  </WithStyles(ForwardRef(ListItem))>
</ContactSuggestion>
`;
