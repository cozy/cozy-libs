// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`(cozy-realtime) cozySocket handling and initCozySocket:  cozySocket should not send socket message, add doctype listener and state multiple times if this is the same doctype 1`] = `
Map {
  "io.cozy.mocks" => Object {
    "created": Array [
      [MockFunction],
    ],
    "deleted": Array [
      [MockFunction],
    ],
    "updated": Array [
      [MockFunction],
    ],
  },
}
`;

exports[`(cozy-realtime) cozySocket handling and initCozySocket:  cozySocket should send socket message and add state multiple times if this is different doc ids: listeners 1`] = `
Map {
  "io.cozy.mocks/id1234" => Object {
    "updated": Array [
      [MockFunction],
    ],
  },
  "io.cozy.mocks/id5678" => Object {
    "updated": Array [
      [MockFunction],
    ],
  },
}
`;

exports[`(cozy-realtime) cozySocket handling and initCozySocket:  cozySocket should send socket message and add state multiple times if this is the different doctypes 1`] = `
Map {
  "io.cozy.mocks" => Object {
    "created": Array [
      [MockFunction],
    ],
  },
  "io.cozy.mocks2" => Object {
    "updated": Array [
      [MockFunction],
    ],
  },
  "io.cozy.mocks3" => Object {
    "deleted": Array [
      [MockFunction],
    ],
  },
}
`;

exports[`(cozy-realtime) cozySocket handling and initCozySocket:  cozySocket should throw an error if the listener provided is not a function 1`] = `"Realtime event listener must be a function"`;

exports[`(cozy-realtime) cozySocket handling and initCozySocket:  initCozySocket should call createWebSocket with correct config and arguments 1`] = `
Array [
  Object {
    "domain": "cozy.tools:8080",
    "secure": false,
    "token": "blablablatoken",
  },
  [Function],
  [Function],
  3,
  1000,
]
`;

exports[`(cozy-realtime) cozySocket handling and initCozySocket:  initCozySocket should define a global configured cozy socket 1`] = `
Object {
  "subscribe": [Function],
  "unsubscribe": [Function],
}
`;

exports[`(cozy-realtime) cozySocket handling and initCozySocket:  onSocketClose provided by initCozySocket to createWebSocket should handle error from a retry createWebSocket with an error message 1`] = `"Unable to reconnect to realtime. Error: expected socket retry error"`;

exports[`(cozy-realtime) cozySocket handling and initCozySocket:  onSocketClose provided by initCozySocket to createWebSocket should retry according to retries provided and !event.wasClean (with listeners state) 1`] = `
Array [
  Array [
    "io.cozy.mocks",
    null,
  ],
  Array [
    "io.cozy.mocks2",
    "id1234",
  ],
]
`;

exports[`(cozy-realtime) cozySocket handling and initCozySocket:  onSocketMessage provided by initCozySocket to createWebSocket should throw error if eventType error 1`] = `"expected realtime error"`;
