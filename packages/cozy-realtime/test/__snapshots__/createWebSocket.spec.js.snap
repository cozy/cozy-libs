// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`(cozy-realtime) createWebSocket:  socket should create a global socket handling wss 1`] = `
WebSocket {
  "binaryType": "blob",
  "listeners": Object {
    "close": Array [
      [Function],
    ],
    "error": Array [
      [Function],
    ],
    "message": Array [
      [MockFunction],
    ],
    "open": Array [
      [Function],
    ],
  },
  "protocol": "io.cozy.websocket",
  "readyState": 1,
  "url": "wss://localhost:8880/realtime/",
}
`;

exports[`(cozy-realtime) createWebSocket:  socket should create a global socket promise with provided domain and secure option 1`] = `
WebSocket {
  "binaryType": "blob",
  "listeners": Object {
    "close": Array [
      [Function],
    ],
    "error": Array [
      [Function],
    ],
    "message": Array [
      [MockFunction],
    ],
    "open": Array [
      [Function],
    ],
  },
  "protocol": "io.cozy.websocket",
  "readyState": 1,
  "url": "ws://localhost:8880/realtime/",
}
`;

exports[`(cozy-realtime) createWebSocket:  socket should handle authenticating on socket open 1`] = `
Object {
  "method": "AUTH",
  "payload": "blablablatoken",
}
`;

exports[`(cozy-realtime) createWebSocket:  socket should handle closing server 1`] = `
CloseEvent {
  "bubbles": false,
  "cancelBubble": false,
  "cancelable": false,
  "code": 1000,
  "currentTarget": WebSocket {
    "binaryType": "blob",
    "listeners": Object {
      "close": Array [
        [Function],
      ],
      "error": Array [
        [Function],
      ],
      "message": Array [
        [MockFunction],
      ],
      "open": Array [
        [Function],
      ],
    },
    "protocol": "io.cozy.websocket",
    "readyState": undefined,
    "url": "ws://localhost:8880/realtime/",
  },
  "defaultPrevented": false,
  "eventPhase": 0,
  "isTrusted": false,
  "reason": "",
  "returnValue": true,
  "srcElement": WebSocket {
    "binaryType": "blob",
    "listeners": Object {
      "close": Array [
        [Function],
      ],
      "error": Array [
        [Function],
      ],
      "message": Array [
        [MockFunction],
      ],
      "open": Array [
        [Function],
      ],
    },
    "protocol": "io.cozy.websocket",
    "readyState": undefined,
    "url": "ws://localhost:8880/realtime/",
  },
  "target": WebSocket {
    "binaryType": "blob",
    "listeners": Object {
      "close": Array [
        [Function],
      ],
      "error": Array [
        [Function],
      ],
      "message": Array [
        [MockFunction],
      ],
      "open": Array [
        [Function],
      ],
    },
    "protocol": "io.cozy.websocket",
    "readyState": undefined,
    "url": "ws://localhost:8880/realtime/",
  },
  "timeStamp": 0,
  "type": "close",
  "wasClean": true,
}
`;

exports[`(cozy-realtime) createWebSocket:  socket should handle message 1`] = `
MessageEvent {
  "bubbles": false,
  "cancelable": false,
  "canncelBubble": false,
  "currentTarget": WebSocket {
    "binaryType": "blob",
    "listeners": Object {
      "close": Array [
        [Function],
      ],
      "error": Array [
        [Function],
      ],
      "message": Array [
        [MockFunction] {
          "calls": Array [
            Array [
              [Circular],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
      ],
      "open": Array [
        [Function],
      ],
    },
    "protocol": "io.cozy.websocket",
    "readyState": 1,
    "url": "ws://localhost:8880/realtime/",
  },
  "data": "a server message to socket",
  "defaultPrevented": false,
  "eventPhase": 0,
  "isTrusted": false,
  "lastEventId": "",
  "origin": "ws://localhost:8880/realtime/",
  "ports": null,
  "returnValue": true,
  "srcElement": WebSocket {
    "binaryType": "blob",
    "listeners": Object {
      "close": Array [
        [Function],
      ],
      "error": Array [
        [Function],
      ],
      "message": Array [
        [MockFunction] {
          "calls": Array [
            Array [
              [Circular],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
      ],
      "open": Array [
        [Function],
      ],
    },
    "protocol": "io.cozy.websocket",
    "readyState": 1,
    "url": "ws://localhost:8880/realtime/",
  },
  "target": WebSocket {
    "binaryType": "blob",
    "listeners": Object {
      "close": Array [
        [Function],
      ],
      "error": Array [
        [Function],
      ],
      "message": Array [
        [MockFunction] {
          "calls": Array [
            Array [
              [Circular],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
      ],
      "open": Array [
        [Function],
      ],
    },
    "protocol": "io.cozy.websocket",
    "readyState": 1,
    "url": "ws://localhost:8880/realtime/",
  },
  "timeStamp": 0,
  "type": "message",
}
`;

exports[`(cozy-realtime) createWebSocket:  socket should throw error if no url or domain provided 1`] = `"domain is required if no attribute url are provider.."`;

exports[`(cozy-realtime) createWebSocket:  socket should throw error if wrong url format provided 1`] = `"Unable to detect domain"`;

exports[`(cozy-realtime) createWebSocket:  socket should throw error if wrong url type provided 1`] = `"url should be an URL."`;

exports[`(cozy-realtime) createWebSocket:  socket should warn errors on socket errors 1`] = `"WebSocket error: undefined"`;
