// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`(cozy-realtime) API:  subscribe all docs: should have a correctly configured socket, cozySocket and listeners on subscribe call and reset listeners on unsubscribe (all docs): cozySocket 1`] = `
Object {
  "subscribe": [Function],
  "unsubscribe": [Function],
}
`;

exports[`(cozy-realtime) API:  subscribe all docs: should have a correctly configured socket, cozySocket and listeners on subscribe call and reset listeners on unsubscribe (all docs): listeners 1`] = `
Map {
  "io.cozy.mocks" => Object {
    "created": Array [
      [Function],
    ],
    "deleted": Array [
      [Function],
    ],
    "updated": Array [
      [Function],
    ],
  },
}
`;

exports[`(cozy-realtime) API:  subscribe all docs: should have a correctly configured socket, cozySocket and listeners on subscribe call and reset listeners on unsubscribe (all docs): websocket 1`] = `
WebSocket {
  "binaryType": "blob",
  "listeners": Object {
    "close": Array [
      [Function],
    ],
    "error": Array [
      [Function],
    ],
    "message": Array [
      [Function],
    ],
    "open": Array [
      [Function],
    ],
    "server::message": Array [
      [Function],
    ],
  },
  "protocol": "io.cozy.websocket",
  "readyState": 1,
  "url": "ws://localhost:8880/realtime/",
}
`;

exports[`(cozy-realtime) API:  subscribe all docs: should have a correctly configured socket, cozySocket and listeners on subscribe call and reset listeners on unsubscribe (one doc): cozySocket 1`] = `
Object {
  "subscribe": [Function],
  "unsubscribe": [Function],
}
`;

exports[`(cozy-realtime) API:  subscribe all docs: should have a correctly configured socket, cozySocket and listeners on subscribe call and reset listeners on unsubscribe (one doc): listeners 1`] = `
Map {
  "io.cozy.mocks" => Object {
    "created": Array [
      [Function],
    ],
    "deleted": Array [
      [Function],
    ],
    "updated": Array [
      [Function],
    ],
  },
}
`;

exports[`(cozy-realtime) API:  subscribe all docs: should have a correctly configured socket, cozySocket and listeners on subscribe call and reset listeners on unsubscribe (one doc): websocket 1`] = `
WebSocket {
  "binaryType": "blob",
  "listeners": Object {
    "close": Array [
      [Function],
    ],
    "error": Array [
      [Function],
    ],
    "message": Array [
      [Function],
    ],
    "open": Array [
      [Function],
    ],
    "server::message": Array [
      [Function],
    ],
  },
  "protocol": "io.cozy.websocket",
  "readyState": 1,
  "url": "ws://localhost:8880/realtime/",
}
`;
